# CDDL HEADER START
#
# Copyright 2016-2017 Intelerad Medical Systems Incorporated.  All
# rights reserved.
#
# The contents of this file are subject to the terms of the
# Common Development and Distribution License, Version 1.0 only
# (the "License").  You may not use this file except in compliance
# with the License.
#
# The full text of the License is in LICENSE.txt.  See the License
# for the specific language governing permissions and limitations
# under the License.
#
# When distributing Covered Software, include this CDDL HEADER in
# each file and include LICENSE.txt.  If applicable, add the
# following below this CDDL HEADER, with the fields enclosed by
# brackets "[]" replaced with your own identifying information:
# Portions Copyright [yyyy] [name of copyright owner]
#
# CDDL HEADER END

"Templates and commonly-used text."

VERSION = "1.3"

WELCOME = "FlareLint {0}\n(c) 2016-2017 Intelerad Medical Systems Incorporated\n".format(VERSION)

HELP = """Scans a MadCap Flare project for adherence to style rules then
displays a report in your preferred web browser. It's like picking the
lint off your sweater, only more fun.

Usage: 

  python -m flarelint [project] [-v] [--help]

Options:

  project  A Flare project (.flprj) to scan. The default is the project
           in the current directory.

  -v       Verbose progress information.

  --help   Print this help information then quit.

For full documentation, see the doc folder.

"""

REPORT_FILE = 'FlareLintReport.html'

DATE_FORMAT = "%b %d, %Y %I:%M%p"

TEMPLATE_REPORT = """<!DOCTYPE html>
<html lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8" />
  <meta name="generator" content="FlareLint """ + VERSION + """" />
  <style type='text/css'>
body,
code,
div,
h1,
li,
p,
table,
td,
th,
tr,
ul {
  margin: 0;
  padding: 0;
  border: 0;
  line-height: 1.5;
  font-family: Verdana, sans-serif;
  font-size: 1em;
}

h1 { font-size: 3em; }
h2 { font-size: 2em; }
h3 { font-size: 1.5em; }
h4, h5, h6 { font-size: 1em; font-weight: bold;}

h1, h2, h3, h4, h5, h6 {
  line-height: 1;
  margin-top: 1.75em;
  margin-bottom: 1em;
}

body { 
  margin-left: auto; 
  margin-right: auto; 
  width: 60em; 
}

tt,
code, pre {
  font-family: Consolas, monospace, serif;
}

div {
  padding: 0.5em;
  margin-bottom: 1em;
  margin-left: 1em;
}

p {
  margin-bottom: 1em;
}

.file {
  border-top: 1px solid #888;
}

.file:hover {
  background-color: #f8f8f8;
}

.${warningLabel} {
  border-left: 0.25em solid #fc0;
  padding-bottom: 0;
  padding-top: 0;
}

.${errorLabel} {
  border-left: 0.25em solid #c44;
  padding-bottom: 0;
  padding-top: 0;
}

</style>
  <title>FlareLint Report</title>
</head>
<body>

<h1>FlareLint Report</h1>

<p><b>Project:</b> ${project}</p>
<p><b>Date:</b> ${date}</p>
<p><b>Generated by:</b> ${user}</p>
<p><b>Errors:</b> ${errorCount}</p>
<p><b>Warnings:</b> ${warningCount}</p>

${results}

</body>
</html>
"""

TEMPLATE_FILE = """<div class="file">
  <p><a target="_blank" href="${fileuri}" title="Flare file: ${path}"><code>${path}</code></a></p>
  ${results}
</div>
"""

TEMPLATE_RESULT = """  <div class="${level}">
    <p>
      <span title="Rule: $source">${level}</span>: 
      <code>${tag}</code> ${context}
    </p>
    <p>${message}</p>
  </div>"""

REPORT_NO_ISSUES = """<p>Congratulations! No issues found.</p>"""

PROGRESS_RULES_LOAD = """Loading rules: {0}"""
PROGRESS_RULES_DEFAULT = """Installing default rules."""
PROGRESS_SCANNING = """Applying rules to files."""
PROGRESS_FORMATTING = """Formatting report."""
PROGRESS_TALLY = """Errors: {0}\nWarnings: {1}"""
PROGRESS_REPORT = """Report: {0}"""
PROGRESS_PROJECT = """Directory: {0}\nProject: {1}"""
PROGRESS_DONE = "\nDone."

LEVEL_ERROR = 'error'
LEVEL_WARNING = 'warning'

HELP_PROJECT = 'Flare project (.flprj) to lint. Default is the project in the current directory.'
HELP_VERBOSE = 'Verbose. Print progress about files being processed.'

COMPILER_EOF = 'end of file'

ERROR_COMPILER = '\nError in {0}, line {1}:\n{2}'

ERROR_EXPECT_SECTION = """Expected a {0} section, but found {1} instead.  A section must
start at the beginning of a line."""

ERROR_EXPECT_NAME = """Expected a name for {0}, but found {1} instead."""

ERROR_EXPECT_TAG = """Expected a name or * for {0}, but found {1} instead."""

ERROR_EXPECT_NUMBER = """Expected a number for {0}, but found {1} instead."""

ERROR_EXPECT_QUOTE = """Expected quoted text for {0}, but found {1} instead."""

ERROR_COMPILE_MESSAGE = """Found a {0} section in a message section. A message section may
only contain text. To make "{0}" a part of your message, insert a
space before it."""

ERROR_COMPILE_PREDICATE = """Expected a predicate, but found {0} instead."""

ERROR_COMPILE_TYPE = """Expected a rule type of {0} or {1}, but found {2} instead."""

ERROR_BAD_ARG = """Error: Unrecognized option. Try 'python flarelint --help' (without
quotes).
"""

ERROR_MISSING_PROJECT = """Error: Could not find a project to scan. Either you did not specify
a Flare project to lint or there is no project in this folder.
"""

ERROR_PARSE = """Could not read the Flare source file because it is not well-formed
XML. To fix, use MadCap Flare or a text editor to correct the file."""

ERROR_REPORT = """Error: the report contains badly formed HTML code. A message
section in a rule might contain an unescaped *, `, or _ character. Or
a template in resources.py might contain badly formed HTML."""
